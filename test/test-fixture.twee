:: StoryData
{
    "ifid": "B5ABB3A9-F23E-425F-A6A8-D0928AAD845F",
    "format": "SugarCube",
    "format-version": "2.33.2"
}

:: StoryTitle
Dialog Element Macro

:: StoryInit
<<set $dialog_number to 0>>

:: Script [script]
Config.passages.nobr = true;

:: Start
<<include "Test Fixtures">>

:: Test Fixtures
<h1>Test Fixtures</h1>
<<button "Test can create dialog element macros with various title and class name combinations" "Test can create dialog element macros with various title and class name combinations">><</button>><br><br>

<<button "Test can recreate dialog element macros" "Test can recreate dialog element macros">><</button>><br><br>

<<button "Test can stack multiple dialogs and close them, top to bottom, while triggering onopen and onclose" "Test can stack multiple dialogs and close them, top to bottom, while triggering onopen and onclose">><</button>><br><br>

<<button "Test can open on top of official Sugarcube Dialog UI" "Test can open on top of official Sugarcube Dialog UI">><</button>><br><br>

:: Test can create dialog element macros with various title and class name combinations
<h1>Test can create dialog element macros with various title and class name combinations</h1>
<<include "Test no arguments">>

:: Test no arguments
<<button "Open dialog with no arguments">>
    <<dialogelement>>
        <<button "Test blank arguments" "Test blank arguments">><</button>>
    <</dialogelement>>
<</button>>

:: Test blank arguments
<<button "Open dialog with blank arguments">>
    <<dialogelement '' ''>>
        <<button "Test blank title, one-class" "Test blank title, one-class">><</button>>
    <</dialogelement>>
<</button>>

:: Test blank title, one-class
<<button "Open dialog with blank title, one-class">>
    <<dialogelement '  ' 'one-class'>>
        <<button "Test blank title, some classes" "Test blank title, some classes">><</button>>
    <</dialogelement>>
<</button>>

:: Test blank title, some classes
<<button "Open dialog with blank title, some classes">>
    <<dialogelement '' 'some classes'>>
        <<button "Test title, no classes" "Test title, no classes">><</button>>
    <</dialogelement>>
<</button>>

:: Test title, no classes
<<button "Open dialog with title, no classes">>
    <<dialogelement 'title'>>
        <<button "Test title, blank classes" "Test title, blank classes">><</button>>
    <</dialogelement>>
<</button>>

:: Test title, blank classes
<<button "Open dialog with title, blank classes">>
    <<dialogelement 'title' ' '>>
        <<button "Test title, one-class" "Test title, one-class">><</button>>
    <</dialogelement>>
<</button>>

:: Test title, one-class
<<button "Open dialog with title, one-class">>
    <<dialogelement 'title' 'one-class'>>
        <<button "Test title, more than one class" "Test title, more than one class">><</button>>
    <</dialogelement>>
<</button>>

:: Test title, more than one class
<<button "Open dialog with title, more than one class">>
    <<dialogelement 'title' 'more than one class'>>
        <<button "Test title, some classes, blank body" "Test title, some classes, blank body">><</button>>
    <</dialogelement>>
<</button>>

:: Test title, some classes, blank body
<<button "Open dialog with title, some classes, blank body">>
    <<dialogelement 'title' 'some classes'>><</dialogelement>>
<</button>>

:: Test can recreate dialog element macros
<h1>Test can recreate dialog element macros</h1>
<<button "Open a dialog">>
    <<set $dialog_number to $dialog_number + 1>>
    <<dialogelement "My Title" `"dialog-number-" + $dialog_number`>>
        My content
    <</dialogelement>>
<</button>>

:: Test can stack multiple dialogs and close them, top to bottom, while triggering onopen and onclose
<h1>Test can stack multiple dialogs and close them, top to bottom, while triggering onopen and onclose</h1>
<<button "Open Dialog 1">>
  <<set $dialog_number to $dialog_number + 1>>
  /* Start Dialog 1 */
  <<dialogelement "Dialog 1" `"dialog-number-" + $dialog_number`>>
    <<button "Open Dialog 2">>
      <<set $dialog_number to $dialog_number + 1>>
      /* Start Dialog 2 */
      <<dialogelement "Dialog 2" `"dialog-number-" + $dialog_number`>>
        <<button "Open Dialog 3">>
          <<set $dialog_number to $dialog_number + 1>>
          /* Start Dialog 3 */
          <<dialogelement "Dialog 3" `"dialog-number-" + $dialog_number`>>
            <<button "Open Dialog 4">>
              <<set $dialog_number to $dialog_number + 1>>
              /* Start Dialog 4 */
              <<dialogelement "Dialog 4" `"dialog-number-" + $dialog_number`>>
                <<button "Custom close button">><<dialogelementclose>><</button>>
              <<onopen>>
                <<append "#event-log">><p>Opened 4</p><</append>>
              <<onclose>>
                <<append "#event-log">><p>Closed 4</p><</append>>
              <</dialogelement>>
              /* End Dialog 4 */
            <</button>>
          <<onopen>>
            <<append "#event-log">><p>Opened 3</p><</append>>
          <<onclose>>
            <<append "#event-log">><p>Closed 3</p><</append>>
          <</dialogelement>>
          /* End Dialog 3 */
        <</button>>
      <<onopen>>
        <<append "#event-log">><p>Opened 2</p><</append>>
      <<onclose>>
        <<append "#event-log">><p>Closed 2</p><</append>>
      <</dialogelement>>
      /* End Dialog 2 */
    <</button>>
  <<onopen>>
    <<append "#event-log">><p>Opened 1</p><</append>>
  <<onclose>>
    <<append "#event-log">><p>Closed 1</p><</append>>
  <</dialogelement>>
  /* End Dialog 1 */
<</button>>
<h2>Event Log</h2>
<div id="event-log"></div>

:: Test can open on top of official Sugarcube Dialog UI
<h1>Test can open on top of official Sugarcube Dialog UI</h1>
<<button "Open Sugarcube Dialog API">>
    <<script>>
        Dialog.setup("Dialog API", "official-dialog-api");
        Dialog.wiki(Story.get("Sugarcube Dialog Body").processText());
        Dialog.open();
    <</script>>
<</button>>

:: Sugarcube Dialog Body
<<button "Open simple dialog over Dialog API">>
    <<set $dialog_number to $dialog_number + 1>>
    <<dialogelement "On top of sugarcube" `"dialog-number-" + $dialog_number`>>
        <span>My content</span>
    <</dialogelement>>
<</button>>